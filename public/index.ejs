<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>

<meta name="viewport" content="width=device-width,initial-scale=1"/>
<meta name="apple-mobile-web-app-capable" content="yes"/>

<link rel="shortcut icon" href="./memonow.png" type="image/png"/>
<link rel="icon" href="./memonow.png" type="image/png"/>
<link rel="apple-touch-icon" href="./memonow57.png"/>

<title>MemoNow</title>
<script src="https://code.jquery.com/jquery-2.0.3.min.js"></script>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet"/>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">
<script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>
<script src="https://cdn.jsdelivr.net/pouchdb/5.4.5/pouchdb.min.js"></script>
<script src="./cvi_busy_lib.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.2.0/leaflet.css"/>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.2.0/leaflet.js"></script>
<script>
var cookie_name = 'cookie_user_id';
var user_id = getCookie();
if( !user_id || user_id === undefined ){
<% if( user_id ){ %>
  user_id = '<%= user_id %>';
  setCookie( user_id );

  location.href = '/';
<% } %>
}

var localDB = new PouchDB( '<%= settings.db_name %>' );

var remoteDBURL = '<%= settings.db_url %>';
if( !remoteDBURL ){
  var db_username = '<%= settings.db_username %>';
  var db_password = '<%= settings.db_password %>';
  var db_name = '<%= settings.db_name %>';
  var db_usernamepassword = '';
  if( db_username && db_password ){
    db_usernamepassword = db_username + ':' + db_password + '@';
  }
  remoteDBURL = 'https://' + ( db_usernamepassword ? db_usernamepassword : '' ) + db_username + '.cloudant.com/' + db_name;
}
var remoteDB = new PouchDB( remoteDBURL );
var doc_ids = [];

var map = null;
var marker = null;

var isXS = false;
var simplemde= null;
$(function(){
  init();
});

function init(){
  //var sw = window.parent.screen.width;
  var sw = window.innerWidth;
  isXS = ( sw < 768 );
  //console.log( 'sw = ' + sw + ', isXS = ' + isXS );

  if( user_id ){
    if( !isXS ){
      simplemde = new SimpleMDE({
        element: document.getElementById( "memo_body" ),
        forceSync: true,
        spellChecker: false
      });
    }
    
    //. created
    var dt = new Date();
    var yyyy = dt.getFullYear();
    var mm = dt.getMonth() + 1;
    var dd = dt.getDate();
    var hh = dt.getHours();
    var nn = dt.getMinutes();
    var ss = dt.getSeconds();
    var ymdhns = yyyy + "-" 
      + ( mm < 10 ? '0' : '' ) + mm 
      + "-" + ( dd < 10 ? '0' : '' ) + dd
      + " " + ( hh < 10 ? '0' : '' ) + hh
      + ":" + ( nn < 10 ? '0' : '' ) + nn
      + ":" + ( ss < 10 ? '0' : '' ) + ss;
    //$('#memo_created').val( ymdhns );
    $('#memo_created').val( dt );

    //. latlng
    if( navigator.geolocation ){
      navigator.geolocation.getCurrentPosition( function( position ){
        var lat = position.coords.latitude; 
        var lng = position.coords.longitude; 
        var latlng = '[' + lat + ',' + lng + ']';
        $('#memo_latlng').val( latlng );

        //var subject = ymdhns + ' ' + latlng;
        //$('#memo_subject').val( ymdhns );
      }, function( error ){
        //$('#memo_subject').val( ymdhns );
      });
    }else{
      //$('#memo_subject').val( ymdhns );
    }

    var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading..', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
    $.ajax({
      type: 'GET',
      url: '/query?user_id=' + user_id,
      success: function( result ){
        obj.remove();
        var result = JSON.parse( result );
        if( result.status && result.result.docs ){
          doc_ids = [];
          result.result.docs.forEach( function( doc ){
            doc_ids.push( doc._id );
          });

          syncDB( true );
        }
      },
      error: function( err ){
        obj.remove();
        console.log( err );
      }
    });

    $('#navbar').html( '<li><a href="#" title="Logout" onClick="logout()"><span class="glyphicon glyphicon-user"></span> ' + user_id + '(Logout)</a></li>'
      + '<li><a href="#" title="Reset" onClick="resetdb()"><span class="glyphicon glyphicon-refresh"></span> Reset DB</a></li>'
      + '<li><a target="_blank" href="//github.com/dotnsf/memonow" title="Source"><span class="glyphicon glyphicon-eye-open"></span> Source</a></li>'
    );

    var a = '<a class="list-group-item list-group-item-warning" href="#">'
      + '<h3 class="list-group-item-heading">Loading..</h3>'
      + '</a>';
    $('#memos_list').prepend( a );
  }else{
    $('#navbar').html( '<li><a href="#" onClick="login()"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>' );
    $('#POST').prop( "disabled", true );
    $('#DELETE').prop( "disabled", true );
  }
}

function getMemos( active_id ){
  var memos = [];
  localDB.allDocs( { include_docs: true } ).then( function( docs ){
    if( docs && docs.rows && docs.rows.length ){
      docs.rows.forEach( function( row ){
        memos.push( row.doc );
      });
    }

    if( isXS ){
      $('#memos_list').html( '<select class="form-control" id="selectpicker" style="width:100%;"></select>' );
      memos.forEach( function( memo ){
        memo = sanitizeMemo( memo );
        var o = '<option id=\'a_' + memo._id + '\' value=\'' + JSON.stringify( memo ) + '\'>' + memo.subject + '</option>';
        $('#selectpicker').prepend( o );
      });
      var o = '<option selected id=\'a_new\' value=\'{"_id":"","_rev":"","created":"","latlng":"","subject":"","body":""}\'>(NEW)</option>';
      $('#selectpicker').prepend( o );

      $('#selectpicker').change( function(){
        var memo = JSON.parse( $(this).val() );
        edit( memo._id );
      });
    }else{
      $('#memos_list').html( '' );
      memos.forEach( function( memo ){
        memo = sanitizeMemo( memo );
        var a = '<a id=\'a_' + memo._id + '\' class=\'list-group-item\' href=\'#\' onClick=\'edit("' + memo._id + '")\'>'
          + '<h3 class=\'list-group-item-heading\'>' + memo.subject + '</h3>'
          + '<p class=\'list-group-item-text\'>' + memo.updated + '</p>'
          + '</a>';
        $('#memos_list').prepend( a );
      });
      var a = '<a id=\'a_new\' class=\'list-group-item\' href=\'#\' onClick=\'edit("")\'>'
        + '<h3 class=\'list-group-item-heading\'>(NEW)</h3>'
        + '<p class=\'list-group-item-text\'></p>'
        + '</a>';
      $('#memos_list').prepend( a );
    }

    activeMemo( active_id );
  }).catch( function( err ){
    console.log( err );
  });
}

function deleteMemo(){
  if( window.confirm( 'Are you really going to delete this memo?' ) ){
    var id = $('#memo_id').val();
    var rev = $('#memo_rev').val();
    localDB.remove( id, rev )
      .then( function( result ){
        var n = doc_ids.indexOf( id );
        if( n > -1 ){
          doc_ids.splice( n, 1 );
          syncDB();
        }
      }).catch( function( err ){
        console.log( err );
      });
    getMemos();
  }
}

function addMemo(){
  var id = $('#memo_id').val();
  var rev = $('#memo_rev').val();
  var subject = $('#memo_subject').val();
  var body = isXS ? $('#memo_body').val() : simplemde.value();
  var created = $('#memo_created').val();
  var latlng = $('#memo_latlng').val();

  if( !subject ){
    subject = created;
    if( latlng ){
      subject += latlng;
    }
  }

  var data = { subject: subject, body: body, created: created, latlng: latlng, user_id: user_id };

  var updated = new Date();
  var _id = id ? id : getUUID();
  data['_id'] = '' + _id;
  if( rev ){
    data['_rev'] = '' + rev;
  }
  data['updated'] = updated;
  //console.log( data );

  localDB.put( data )
    .then( function( res ){
      if( doc_ids.indexOf( _id ) == -1 ){
        doc_ids.push( _id );
        syncDB();
      }
    }).catch( function( err ){
      console.log( err );
    });
  getMemos(_id);
}

function getUUID( myStrong ){
  var strong = 1000;
  if( myStrong ) strong = myStrong;
  return new Date().getTime().toString(16) + Math.floor(strong*Math.random()).toString(16);
}

function edit( memo_id ){
  $('.list-group-item').removeClass( 'active' );
  if( memo_id ){
    $('#a_'+memo_id).addClass( 'active' );

    localDB.get( memo_id ).then( function( memo ){
      $('#memo_id').val( memo._id );
      $('#memo_rev').val( memo._rev );
      if( memo.created ){
        $('#memo_created').val( memo.created );
      }else{
        $('#memo_created').val( new Date() );
      }
      $('#memo_latlng').val( memo.latlng );
      $('#memo_subject').val( memo.subject );
  
      $('#memo_body').val( memo.body );
      if( !isXS ){
        simplemde.value( memo.body );
      }

      $('#latlng_map').css( 'height','0px' );
      $('#category_map').css( 'display','none' );
      var latlng = eval( memo.latlng );
      if( latlng && latlng.length && latlng[0] && latlng[1] ){
        $('#latlng_map').css( 'height','300px' );
        $('#category_map').css( 'display','block' );
        $('#category_map').html( '['+latlng[0]+','+latlng[1]+']' );
        if( map == null ){
          map = L.map( 'latlng_map' ).setView( latlng, 15 );
          L.tileLayer(
            'https://cyberjapandata.gsi.go.jp/xyz/std/{z}/{x}/{y}.png', {
              attribution: '<a href="https://www.gsi.go.jp/kikakuchousei/kikakuchousei40182.html/" target="_blank">国土地理院</a>',
              maxZoom: 18
            }
          ).addTo( map );
          marker = L.marker( latlng ).addTo( map );
        }else{
          var position = new L.LatLng( latlng[0], latlng[1] );
          map.setView( position, 15 );
          marker.setLatLng( position );
        }
      }
    }).catch( function( err ){
      console.log( err );
    });
  }else{
    $('#a_new').addClass( 'active' );
    $('#memo_id').val( '' );
    $('#memo_rev').val( '' );
    $('#memo_created').val( new Date() );
    $('#memo_latlng').val( '' );
    $('#memo_subject').val( '' );
    $('#memo_body').val( '' );
    if( !isXS ){
      simplemde.value( '' );
    }
  }
}

function activeMemo( id ){
  var memo = null;
  if( id ){
    memo = localDB.get( id );
  }else{
    memo = {"_id":"","_rev":"","created":"","latlng":"","subject":"","body":""};
  }

  edit( id );
}

function syncDB( reload ){
  if( remoteDB && localDB && doc_ids ){
    remoteDB.sync( localDB, {
      doc_ids: doc_ids,
      live: true,
      retry: true
    }).on( 'change', function( info ){
      console.log( 'db.sync() change: ' );
      if( reload ){ getMemos(); } 
    }).on( 'paused', function( info ){
      console.log( 'db.sync() paused: ' );
      if( reload ){ getMemos(); } 
    }).on( 'active', function(){
      console.log( 'db.sync() active: ' );
    }).on( 'denied', function( err ){
      console.log( 'db.sync() denied: ' );
      console.log( err );
    }).on( 'complete', function( info ){
      console.log( 'db.sync() Complete: ' );
      console.log( info );
      getMemos();
    }).on( 'error', function( err ){
      console.log( 'db.sync() error: ' );
      console.log( err );
    });
  }
}


function login(){
  user_id = getCookie();
  if( user_id ){
    location.href = '/';
  }else{
    location.href = '/twitter';
  }
}

function logout(){
  if( window.confirm( 'Logout?' ) ){
    removeCookie();
    location.href = '/';
  }
}

function resetdb(){
  if( window.confirm( 'Are you going to reset your local db?' ) ){
    localDB.destroy().then( function(){
      localDB = new PouchDB( '<%= settings.db_name %>' );
      init();
      //location.href = '/';
    }).catch( function( err ){
      alert( err );
      localDB = new PouchDB( '<%= settings.db_name %>' );
      init();
      //location.href = '/';
    });
  }
}


function getCookie(){
  var r = null;

  var cookies = document.cookie.split( ';' );
  cookies.forEach( function( value ){
    var t = value.split( '=' );
    if( t[0].trim() == cookie_name ){
      r = t[1].trim();
    }
  });

  return r;
}

function setCookie( value ){
  var maxage = 3650 * 24 * 60 * 60;
  var cookie_var = cookie_name + '=' + value + ';max-age=' + maxage + ';path=/';
  document.cookie = cookie_var;
}

function removeCookie(){
  document.cookie = cookie_name + '=;max-age=0;path=/';
}


function show_layer( cat ){
  var objID = document.getElementById( 'layer_' + cat );
  if( objID.className == 'close' ){
    objID.style.display = 'block';
    objID.className = 'open';
  }else{
    objID.style.display = 'none';
    objID.className = 'close';
  }
}

function sanitize( str ){
  return str.replace(/"/g, '&#34;').replace(/'/g, '&#39;');
}
function sanitizeMemo( memo ){
  if( memo.subject ){ memo.subject = sanitize( memo.subject ); }
  if( memo.body ){ memo.body = sanitize( memo.body ); }
  return memo;
}
</script>
<style>
body{
  width:100%;
  height:100%;
}
div{
  height:100%;
}
#memo_subject{
  width:100%;
}
#memo_body{
  width:100%;
  height:50%;
}
#latlng_map{
  width:100%;
  height:300px;
}
#category_map{
  display:none;
}
#selectpicker{
  width:100%;
}

@media (max-width: 2000px) {
    .navbar-header {
        float: none;
    }
    .navbar-left,.navbar-right {
        float: none !important;
    }
    .navbar-toggle {
        display: block;
    }
    .navbar-collapse {
        border-top: 1px solid transparent;
        box-shadow: inset 0 1px 0 rgba(255,255,255,0.1);
    }
    .navbar-fixed-top {
	top: 0;
	border-width: 0 0 1px;
    }
    .navbar-collapse.collapse {
        display: none!important;
    }
    .navbar-nav {
        float: none!important;
	margin-top: 7.5px;
    }
    .navbar-nav>li {
        float: none;
    }
    .navbar-nav>li>a {
        padding-top: 10px;
        padding-bottom: 10px;
    }
    .collapse.in{
  	display:block !important;
    }
}
</style>
</head>
<body>

<div class="navbar navbar-default">
  <div class="container">
    <div class="navbar-header">
      <a href="/" class="navbar-brand">MemoNow</a>
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
    </div>
    <div class="collapse navbar-collapse target">
      <ul class="nav navbar-nav navbar-right" id="navbar">
      </ul>
    </div>
  </div>
</div>

<div class="container">
  <div class="row">
    <div class="col-xs-12 col-sm-3">
      <!-- Selector -->
      <div class="list-group" id="memos_list" style="width:100%;">
      </div>
    </div>

    <div class="col-xs-12 col-sm-9">
      <!-- Body -->
      <input id="memo_id" type="hidden"/>
      <input id="memo_rev" type="hidden"/>
      <input id="memo_created" type="hidden"/>
      <input id="memo_latlng" type="hidden"/>
      <input id="memo_subject" type="text" class="form-control" placeholder="subject"/><br/>
      <textarea id="memo_body" rows="3" class="form-control" placeholder="body"></textarea><br/>

      <div><a href="#" id="category_map" onClick="show_layer('map');">(Map)</a></div>
      <div id="layer_map" style="display:none; position:relative;" class="close">
        <div id="latlng_map"></div>
      </div>
      <input type="button" value="DELETE" class="btn btn-danger pull-right" id="DELETE" onClick="deleteMemo()"/>
      <input type="button" value="SAVE" class="btn btn-success pull-right" id="POST" onClick="addMemo()"/>
      <br/>
    </div>
  </div>
</div>

</body>
</html>
